Introduction
============

Cardinal Suite provides a selection of tracing / debugging features normally used from command line. The aim is to alleviate the tedium
of manually ssh:ing to the device and doing these error-prone steps by hand. It also provides various convenience features like
drag-and-drop package installation / file transfer.

Cardinal Suite is mostly targeted at intermediate/advanced users. It does not offer features already supported by Qt Creator 
(builds, single step debugging).

Installation
============

Ubuntu:

Add Forum Nokia PPA and do::

    apt-get install cardinalsuite.

Others:

Acquire the source code and run directly.

Dependencies: 

On host: Python 2.x, Paramiko, PyQt4.
On device: sshd, python, tools you want to use (strace, ltrace, sp-rtrace, valgrind, gdb...)

Device setup
============

Before the suite can be useful, you need to set up ssh networking and automatic authentication on the device. This is accomplished by copying your 
RSA public keys to the device, following these steps:

- Set up networking on the device. This may mean connecting an USB cable and ensuring that you get an ip address (with "SDK Connectivity" / "MAD Developer"), 
or connecting to WLAN. Ensure you can ssh in as "root".

- Edit the file ~/.cardinal.ini and add details (ip address and default user) for the device, and set "defaultdevice" to point at this device. Like this::

    [n900_usb]
    host = 192.168.2.15
    user = user 
    
    [main] 
    defaultdevice = n900_usb


This is the file you need to edit when switching to a different device.

- Launch "cardinalsetup" from terminal. Type in the ip address as prompted, and let cardinalsetup generate the rsa key if one doesn't already exist.

- You should be all set.

Common tasks
============



Install packages on Device
++++++++++++++++++++++++++

- Launch "Beamer"

- Drag files (.deb / .rpm) to the Beamer window, accept the prompt about installing them

Analyze memory use of the apps on device
++++++++++++++++++++++++++++++++++++++++

- Launch "sp-smaps"
- Browse the produced html report, pay attention to "shared dirty" field

Analyze memory use of an application
++++++++++++++++++++++++++++++++++++

- Use sp-rtrace or valgrind tools.
- **Caution**: large frameworks like Qt often report false positives as leaks - i.e. memory blocs that are allocated, but 
  never intended to be freed before process exit. Therefore, you need to excercise common sense to determine whether 
  there is a real leak behind the reported allocation.

Launch an application
+++++++++++++++++++++

Enter the app name in the "Exec" field. Click "Find" to search for the application binary (this looks through PATH, .desktop files...)

Start tracing when application is already running
+++++++++++++++++++++++++++++++++++++++++++++++++

Many commands allow operation in "deferred" mode. This means that you launch the application normally, but only enable tracing later on when the application is already running (think "strace -p PID").

To do this, check "Defer" checkbox before choosing the operation. Later, in Process Explorer, press "Start tracing" to start tracing, and the same button to stop tracing later on.

Commands that support Deferred mode include strace, sp-trace, ltrace.

Examine crash reperts
+++++++++++++++++++++

- Do "File => Collect Cores" to start collecting core dumps (you need to do this after every reboot)
- Launch an app with "Run".
- If/when the app crashes, choose "Examine cores" and select the core file you want to investigate
- Note that this is sometimes handy even if you prefer to debug with Qt SDK - only doing post-mortem crash 
  analysis on device can be much faster as no debugger needs to be used before the actual crash.
- You do need to ensure that all the necessary -dbg packages are installed to gleam useful information
  about the cores

Browse / modify device file system
++++++++++++++++++++++++++++++++++

- You can easily send files to the device using "Beamer". All the files end up in ~/cardinal/inbox".
- You can export files with Beamer also - copy the files to the "~/cardinal/outbox" 
  directory on device, then choose "Fetch outbox" from Beamer
- Choose "Krusader" to launch Krusader, with the device content opened in right hand panel
- Choose "Mount" to mount the device file system under ~/.gvfs.

Tracing an application
======================

"Process Explorer" is the window that gets opened when you launch an application (with run/strace/...). It can be used to interact with the application (send signal, start / stop tracing) or look at the logs that the application is producing.

Every log emitted by the application is presented by a tab in Process Explorer. Press **"R"** to fetch the latest version of the currently active log. Press "**Scn**" to scan for possible new logs from the application (e.g. after postprocessing sp-rtrace output, you can look for rtrace_resolved.txt).

If you were running an operation that requires post-processing to produce useful results (like sp-trace), choose "Postproc" and select appropriate postprocessing mode. sp-trace, for example, allows you to filter out memory allocations that were subsequently freed, showing only a list of allocations it considers to be leaks

